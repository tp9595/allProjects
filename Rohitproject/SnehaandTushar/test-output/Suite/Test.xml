<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="hp" ignored="0" name="Test" tests="3" failures="0" timestamp="2022-12-20T16:49:22 IST" time="10.479" errors="0">
  <testcase name="@BeforeTest initiReqData" time="10.336" classname="org.testNgPractice.FlipkartAddToCart">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line
Build info: version: &amp;apos;4.2.2&amp;apos;, revision: &amp;apos;683ccb65d6&amp;apos;
System info: host: &amp;apos;HP&amp;apos;, ip: &amp;apos;192.168.1.106&amp;apos;, os.name: &amp;apos;Windows 8.1&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.3&amp;apos;, java.version: &amp;apos;1.8.0_321&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'HP', ip: '192.168.1.106', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:588)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:283)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:184)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:126)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:114)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at org.selenium_01utilities.BaseUtilityUpdated.startup(BaseUtilityUpdated.java:51)
at org.testNgPractice.FlipkartAddToCart.initiReqData(FlipkartAddToCart.java:26)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
... Removed 15 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest initiReqData -->
  <testcase name="@BeforeTest browserdtail" time="0.0" classname="org.testNgPractice.ZomatoDropDown">
    <skipped/>
  </testcase> <!-- @BeforeTest browserdtail -->
  <testcase name="@BeforeMethod loginFlipkart" time="0.0" classname="org.testNgPractice.FlipkartAddToCart">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginFlipkart -->
  <testcase name="@AfterMethod flipkartLogout" time="0.0" classname="org.testNgPractice.FlipkartAddToCart">
    <skipped/>
  </testcase> <!-- @AfterMethod flipkartLogout -->
  <testcase name="@AfterTest closeDriver" time="0.0" classname="org.testNgPractice.FlipkartAddToCart">
    <skipped/>
  </testcase> <!-- @AfterTest closeDriver -->
  <testcase name="@AfterTest closeDriver" time="0.0" classname="org.testNgPractice.ZomatoDropDown">
    <skipped/>
  </testcase> <!-- @AfterTest closeDriver -->
  <testcase name="addItemsToCart" time="0.001" classname="org.testNgPractice.FlipkartAddToCart">
    <skipped/>
  </testcase> <!-- addItemsToCart -->
  <testcase name="searchMenu" time="0.0" classname="org.testNgPractice.ZomatoDropDown">
    <skipped/>
  </testcase> <!-- searchMenu -->
  <testcase name="trial" time="0.0" classname="org.testNgPractice.ZomatoDropDown">
    <skipped/>
  </testcase> <!-- trial -->
</testsuite> <!-- Test -->
