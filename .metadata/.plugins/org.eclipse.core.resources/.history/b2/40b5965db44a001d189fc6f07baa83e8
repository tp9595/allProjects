package programpractice;



import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map.Entry;

import javax.swing.plaf.synth.SynthOptionPaneUI;

import java.util.Set;

public class ALLinONE {

	public static void main(String[] args) {
		//maxInArray();
		//minInArray();
		//onlyPrintAscendingInGivenArray();
		//onlyPrintDescendingInGivenArray();
		//selectionSort();
		//bubbleSort();
		//additionOf1DArray();
		//additionOf2DArray();
		//multiplicationOfTwoArray();
	//	reverseANDPalindrome();
		//reverseYourNameNotSurname();
		//fibonacii();
		//fibo();
		//factorial();
		//evenAndOdd();
		//reverseAndPalindrome();
		//armstrongNumber();
		//PrimeNumber();
		//count vowels();
		//only print 
		//pyramid();
		//diamond();
		//printNumbersWithoutloop(4);
		//revrseOnlyWords();
		//revrseOnlyWordsPk();
		//fibo();
		//findDuplicateInString();
		//sortzeroAndOne();
		//sortzeroAndOneZeroatStarting();
		//missingArray();
		//string();
		//sumInstring();
		firstWordCapital();
		//maxorMinProduct();
		//maxProductNumber();
		//repetedWord();
		//MaxProduct();
	}
	//find max number in given array
	public static void maxInArray() {
		int ar[]= {10,20,30,85,6,8,10};
		int max =ar[0];
		for(int i=1;i<ar.length;i++) {
			if(max<ar[i]) {
				max=ar[i];	
			}
		}System.out.println("Max no is "+max);
	}
	//find min number in given array
	public static void minInArray() {
		int ar[]= {10,20,30,85,6,8};
		int min =ar[0];
		for(int i=1;i<ar.length;i++) {
			if(min>ar[i]) {
				min=ar[i];	
			}
		}System.out.println("Min no is "+min);
	}
	//only print ascending number with respect to first number
	public static void onlyPrintAscendingInGivenArray() {
		int ar[]= {10,20,2,30,85,6,8};
		int firstNo =ar[0];
		for(int i=0;i<ar.length;i++) {
			if(firstNo<=ar[i]) {
				firstNo=ar[i];
				System.out.println(ar[i]);		
			}
		}
	}
	//only print descending number with respect to first number
	public static void onlyPrintDescendingInGivenArray() {
		int ar[]= {10,20,2,30,85,6,8};
		int firstNo =ar[0];
		for(int i=0;i<ar.length;i++) {
			if(firstNo>=ar[i]) {
				firstNo=ar[i];
				System.out.println(ar[i]);		
			}
		}
	}
	//sort the array using selection sort
	public static void selectionSort() {
		int ar[]= {20,53,96,85,30};
		int temp;
		for(int i=0;i<ar.length;i++) {
			for(int j=i+1;j<ar.length;j++) {
				//if(ar[i]<ar[j]) { //Descending
				if(ar[i]>ar[j]) { //for Ascending if(ar[i]>ar[j])	
					temp=ar[i];		
					ar[i]=ar[j];
					ar[j]=temp;
				}
			}
		}for(int i=0;i<ar.length;i++) {
			System.out.println(ar[i]);
		}
	}
	//sort the array using bubble sort
	public static void bubbleSort() {
		int ar[]={20,53,96,85,30};
		int temp;  //1 round of outer loop 4 round of inner loop will be excute
		for(int i=0;i<ar.length;i++) {
			for(int j=1;j<ar.length-i;j++) {
				//if(ar[j-1]<ar[j]) {//for descending
				if(ar[j-1]>ar[j]) {	//for ascending
					temp=ar[j-1];
					ar[j-1]=ar[j];
					ar[j]=temp;
				}
			}
		}for(int i=0;i<ar.length;i++) {
			System.out.println(ar[i]);
		}
	}
	//addition of two 1D array 
	public static void additionOf1DArray() {
		int ar1[]= {10,52,96,30,40};
		int ar2[]={10,52,96,30,40};
		int sum[] =new int[ar2.length];
		for(int i=0;i<ar2.length;i++) {
			
			sum[i]=ar1[i]+ar2[i];
		}
		for(int i=0;i<sum.length;i++) {
			System.out.println(sum[i]);
		}

	}
	//Addition of 2D array
	public static void additionOf2DArray() {
		int ar1[][]= {{10,52,96},{30,40,63}};//2
		int ar2[][]={{10,52,96},{30,40,30}};
		int sum[][]=new int[2][3];
		for(int i=0;i<ar1.length;i++) {
			for(int j=0;j<3;j++) {//Note: Need if array is not of same size explicitly mention no.of columns here
				sum[i][j]=ar1[i][j]+ar2[i][j];
			}
		}
		for(int i=0;i<sum.length;i++) {
			for(int j=0;j<3;j++) {
				System.out.print(sum[i][j]+" ");
			}System.out.println();

		}
	}
	//Multiplication of 2D Array
	//no.of columns of first array should be equal to the no. of rows of second array then only we can perform multiplication of two array
	public static void multiplicationOfTwoArray() {
		int ar1[][]= {{1,2,3},{4,5,6},{7,8,9}};
		int ar2[][]= {{1,2,3},{4,5,6},{7,8,9}};

		int mult[][]=new int[3][3];//mXn*nXl===>mXl

		for(int i=0;i<3;i++) {//if matrix is not of same size 3==r1-->number of row of first matrix
			for(int j=0;j<3;j++) {//3==no.of column of second matrix
				for(int k=0;k<3;k++) {//3==no. of column of first mattrix or no. of row of second matrix 
					mult[i][j]=mult[i][j]+ar1[i][k]*ar2[k][j];
											    
				}
			}
		}
		for(int i=0;i<mult.length;i++) {
			for(int j=0;j<mult.length;j++) {
				System.out.print(mult[i][j]+"  ");
			}
			System.out.println();
		}
	}
	//reverse string and check string is palidrome 
	public static void reverseANDPalindrome() {
		           //01234 
		String str="NAMAN";//5//index-->4
		String reverse="";
		for(int i=str.length()-1;i>=0;i--) {
			
			System.out.print(str.charAt(i));//for reverse string 
			reverse=reverse+str.charAt(i);//Need to store string for comparing
		}			
		System.out.println();
		//System.out.print(reverse);
		System.out.println();
		if(reverse.equals(str)) {
			System.out.println("string is Palindrome");
		}else {
			System.out.println("string is not Palindrome");
		}
	}
	//Only reverse your name and not your surname
	public static void reverseYourNameNotSurname() {
		String str="Rohit Mahajan";
		String starr[]=str.split(" ");//Array of string{"Rohit","Mahajan"}
		
		String fName=starr[0];//Rohit
		String lName=starr[1];//Mahajan
		String reverse="";

		for(int i=fName.length()-1;i>=0;i--) {
			//System.out.print(str.charAt(i));//for reverse string 
			reverse=reverse+str.charAt(i);//Need to store string for comparing
		}
		System.out.println(reverse+" "+lName);
	}	
	//fibonacii series
	public static void fibonacii() {
		int a=0;//0 1 1 2 3 5 8
		int b=1;
		int temp =1;
		System.out.print(a);//0
		System.out.print(" "+b);//1
		while(temp<55) {
			System.out.print(" "+temp);
			a=b;
			b=temp;
			temp=a+b;
		}

	}

	public static void fibo() {
		int a=0;
		int b=1;
		int temp=0;
		for(int i=1;i<=10;i++) {
			System.out.print(" "+temp);//0 1 1 2 3
			a=b;
			b=temp;
			temp=a+b;
		}
	}
	//factorial
	public static void factorial() {
		int num=5;
		int fact=1;
		for(int i=1;i<=num;i++) {
			fact=fact*i;//1*1-->1--->1*2=2--->2*3=6-->6*4=24--->24*5-->120
		}
		System.out.println(fact);
	}
	//even odd
	public static void evenAndOdd() {
		//int a=10;
		int a=15;
		if(a%2==0) {
			System.out.println("No. is even");
		}else {
			System.out.println("No. is odd");
		}
	}
	//reverse number and palindrome number.
	public static void reverseAndPalindrome() {
		//int num=123456;
		int num =123321;
		int temp =num;
		int rev=0;

		while(num>0) {
			int rem=num%10;
			rev=rev*10+rem;
			num=num/10;
		}
		System.out.println(rev);
		if(rev==temp) {
			System.out.println("Number is Palindrome");
		}else {
			System.out.println("Number is Not Palindrome");
		}	
	}
	//Armstrong Number 
	public static void armstrongNumber() {
		int num=153;
		int temp=num;
		int arm=0;

		while(num>0) {
			int rem=num%10;
			arm=arm+rem*rem*rem;
			num=num/10;
		}
		if(temp==arm) {
			System.out.println("No. is armstrong");
		}else {
			System.out.println("No. is not armstrong");
		}
	}
	public static void pyramid() {

		int num=5;
		for(int i=1;i<=num;i++) {//how many rows you want to print
			for(int k=i;k<num;k++) {//for spaces and first triangle
				System.out.print("  ");
			}for(int j=1;j<=i;j++) {//for star and second triangle
				System.out.print("* ");
			}for(int l=1;l<i;l++) {	//for star and third triangle	
				System.out.print("* ");
			}
			System.out.println();
		}
	} 
	public static void diamond() {
		int num =5;
		for(int i=1;i<num;i++) {
			for(int j=i;j<num;j++) {
				System.out.print("  ");
			}for(int k=1;k<=i;k++) {
				System.out.print("* ");
			}for(int l=1;l<i;l++) {
				System.out.print("* ");
			}
			System.out.println();
		}
		for(int i=1;i<=num;i++) {
			for(int j=1;j<i;j++) {
				System.out.print("  ");
			}for(int k=i;k<=num;k++) {
				System.out.print("* ");
			}for(int k=i;k<num;k++) {
				System.out.print("* ");
			}
			System.out.println();
		}
	}

	public static void printNumbersWithoutloop(int n) {

		if(n>0) {//4/3/2/1/
			printNumbersWithoutloop(n-1);//3//2//1//0
			System.out.println(n+" ");//4//3//2//1
		}
	}

	public static void revrseOnlyWords() {
		String str ="I am Rohit";
		String str1[]=str.split(" ");
		String reve="";
		for(int i=0;i<str1.length;i++) {
			for(int j=str1[i].length()-1;j>=0;j--) {
				reve=reve+str1[i].charAt(j);
			}
			reve=reve+" ";
		}
		System.out.println(reve);
	}

	public static void revrseOnlyWordsPk() {
		String str1="i am an automation tester";
		String str2 []=str1.split(" ");
		String rev="";
		for(int j=0;j<=str2.length-1;j++) {
			for(int i=str2[j].length()-1;i>=0;i--){

				rev=rev+str2[j].charAt(i);
			}
			rev=rev+" ";
		}
		System.out.println(rev);

	}
	public static void findDuplicateInString() {
		String str="There is garden and it is beautiful";
		str=str.toLowerCase();
		str=str.replace(" ","");
		char ar[]=str.toCharArray();//{t,h,		
		int count=0;
		HashMap<Character,Integer> hm=new HashMap<Character,Integer>();
		for(int i=0;i<ar.length;i++) {
			count=0;
			for(int j=0;j<ar.length;j++) {//t,h,e,r,e
				if(ar[i]==ar[j]) {
					count++;

				}
			}if(count>1) {
				hm.put(ar[i],count);
			}


		}
		System.out.println(hm);}
		
//		String str123="";
//		Set<Entry<Character, Integer>> es=hm.entrySet();
//		//Entry<Character,Integer> gh=hm.entrySet();
//		for(Object obj :es) {
//			str123=String.valueOf(obj);
//			if(str123.contains("=")) {
//				System.out.println(obj);
//			}
//
//
//		}
//		Set key=hm.keySet();
//		System.out.println(key);
//		Collection value =hm.values();
//		System.out.println(value);


//	}

	public static void sortzeroAndOne() {
		int ar[]= {0,1,0,1,0,0,1};
		int newAr[]=new int[ar.length];

		int j=0;
		for(int i=0;i<ar.length;i++) {
			if(ar[i]!=0) {
				newAr[j]=ar[i];
				j++;
			}
		}
		for(int k=0;k<newAr.length;k++) {
			System.out.println(newAr[k]);
		}

	}
	public static void sortzeroAndOneZeroatStarting() {
		int ar[]= {0,1,0,2,0,50,0};
		int newAr[]=new int[ar.length];

		int size=ar.length;
		for(int i=0;i<ar.length;i++) {
			if(ar[i]!=0) {
				newAr[--size]=ar[i];//10{             0,0,50,2,1}

			}
		}
		//		for(int i=0;i<ar.length;i++) {
		//			if(ar[i]!=0) {
		//				newAr[j]=ar[i];
		//				j++;
		//			}
		//		}
		for(int k=0;k<newAr.length;k++) {
			System.out.println(newAr[k]);
		}
	}
	public static void missingArray() {
		int ar[]= {1,2,5,6,7,8,10};
		int ogAr[]= {1,2,3,4,5,6,7,8,9,10};
		int avlNum=0;
		for(int i=0;i<ogAr.length;i++) {
			for(int j=0;j<ar.length;j++) {
				if(ogAr[i]==ar[j]) {
					avlNum=ogAr[i];
					break;
				}
			}if(avlNum!=ogAr[i])
				System.out.println(ogAr[i]);
		}
	}

	public static void string() {
		String str[]= {"Java","Selenium"};//Java Hello, Selenium Hello
		int a=1;
		for(String str1:str) {

			System.out.print(str1.concat(" Hello"));
			if(a<str.length) {
				System.out.print(", ");
				a++;
			}

		}

	}
	public static void sumInstring() {


		String str = "There123 i2s Ro52hit";
		int sum=0;
		for(int i=0;i<str.length();i++) {
			if(Character.isDigit(str.charAt(i))) {
				int a=str.charAt(i)-'0';//
				sum=sum+a;

			}
		}System.out.println(sum);

	}
	public static void firstWordCapital() {
		String str="My name is rohit";
		//String str12=str.substring(0,2);
		//System.out.println(str12);
		//str=str.toLowerCase();
		String reslt="";
		String strar[]=str.split(" ");
		for(int i=0;i<strar.length;i++) {
			reslt=reslt+" "+strar[i].substring(0,1).toUpperCase().concat(strar[i].substring(1));
			
		}
		System.out.println(reslt.trim());
	}


	public static void maxorMinProduct(){

		int arr[]= {10,20,89,30,52,63};
		int n=arr.length;
		Arrays.sort(arr);
		int num1, num2; 
		int sum1 = arr[0] * arr[1];
		int sum2 = arr[n - 1] * arr[n - 2];

		// print the pairs whose product is greater
		if (sum1 > sum2) {
			num1 = arr[0];
			num2 = arr[1];
		}
		else {
			num1 = arr[n - 2];
			num2 = arr[n - 1];
		}
		System.out.println("Max product pair = " +
				"{" + num1 + "," + num2 + "}");
	}
	public static void maxProductNumber() {

		int ar[]= {1,27,3,4,5,6,8,9,10,5};
		int temp=0;
		int firstLarg=0;
		int secondLarge=0;
		for( int i=0;i<ar.length;i++) {
			for( int j=0;j<ar.length;j++) {
				if(temp<ar[i]*ar[j] & ar[i]!=ar[j]) {
					temp=ar[i]*ar[j];
					firstLarg=ar[i];
					secondLarge=ar[j];

				}
			}
		}System.out.println(firstLarg +" "+secondLarge);

	}
	public static void repetedWord() {
		String str = "Rohit Rohit is is Learning JAVA JAVA";
		String str1[]=str.split(" ");
		String temp="";
		HashMap<String,Integer> hm=new HashMap<String,Integer>();
		for(int i=0;i<str1.length;i++) {	
		int count=0;
			for(int j=0;j<str1.length;j++) {
				if(str1[i].equals(str1[j])) {
					count++;
				}
		
		}hm.put(str1[i],count);
		
	}System.out.println(hm);
//	Set<Entry<String,Integer>> hm1=hm.entrySet();
//	System.out.print(hm1);
}
	public static void MaxProduct() {
	int ar[] = {0,10,2,5,4,6,-1,-2,0,10};
	Arrays.sort(ar);
	int max1 =0;
	int max2=0;
	
	for(int i=0;i<ar.length;i++) {
		for(int j=0 ;j<ar.length;j++) {
			if(max1*max2 < ar[i]*ar[j] & i!=j ) {
				max1=ar[i];
				max2=ar[j];
			}
		}
	}System.out.println(max1+" "+ max2);
}



}